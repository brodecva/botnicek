
api.BotAfterRead               = P\u0159e\u010Dteno nastaven\u00ED soubor\u016F k p\u0159ednostn\u00EDmu na\u010Dten\u00ED: {0}.
api.BotBeforeRead              = P\u0159e\u010Dteno nastaven\u00ED soubor\u016F k dodate\u010Dn\u00E9mu na\u010Dten\u00ED: {0}.
api.BotFilesRead               = P\u0159e\u010Dteno um\u00EDst\u011Bn\u00ED soubor\u016F robota: {0}.
api.BotGossipLocationRead      = P\u0159e\u010Dteno um\u00EDst\u011Bn\u00ED souboru promluvy: {0}.
api.BotNameRead                = P\u0159e\u010Dteno jm\u00E9no robota: {0}.
api.BotPredicatesRead          = Na\u010Dteny predik\u00E1ty robota: {0}.
api.BotSettingsReading         = Na\u010D\u00EDt\u00E1n\u00ED nastaven\u00ED robota: {0}.
api.ConversationPredicatesRead = Na\u010Dteny v\u00FDchoz\u00ED predik\u00E1ty konverzace: {0}.
api.ConversationStrategiesRead = Na\u010Dteny strategie zobrazov\u00E1n\u00ED v\u00FDstupu p\u0159i nastaven\u00ED predik\u00E1t\u016F konverzace: {0}.
api.LanguageAbbreviationsRead  = Na\u010Dtena rozvinut\u00ED zkratek jazyka: {0}.
api.LanguageDelimRead          = P\u0159e\u010Dten n\u00E1zev jazyka: {0}.
api.LanguageEmoticonsRead      = Na\u010Dtena nahrazen\u00ED emotikon jazyka: {0}.
api.LanguageGenderRead         = Na\u010Dtena prohozen\u00ED mu\u017Esk\u00E9ho a \u017Eensk\u00E9ho rodu jazyka: {0}.
api.LanguageNameRead           = P\u0159e\u010Dten odd\u011Blova\u010D v\u011Bt jazyka: {0}.
api.LanguagePerson2Read        = Na\u010Dtena prohozen\u00ED 1. a 3. osoby jazyka: {0}.
api.LanguagePersonRead         = Na\u010Dtena prohozen\u00ED 1. a 2. osoby jazyka: {0}.
api.LanguagePunctuationRead    = Na\u010Dtena nahrazen\u00ED interpunk\u010Dn\u00EDch znam\u00E9nek uvnit\u0159 v\u011Bt jazyka: {0}.
api.LanguageSettingsReading    = Na\u010D\u00EDt\u00E1n\u00ED nastaven\u00ED jazyka: {0}.
api.LanguageSpellingRead       = Na\u010Dteny opravy pravopisu a kolokvialism\u016F jazyka: {0}.
api.SessionCreated             = Vytvo\u0159ena relace konverzace {0}.

demo.alice.GuiAnswerReceived  = V poslucha\u010Di {0} byla p\u0159ijata odpov\u011B\u010F {1}.
demo.alice.GuiCreatedAndShown = Vytvo\u0159eno GUI {0} pro relaci {1}.
demo.alice.GuiTextInput       = V poslucha\u010Di {0} byl odesl\u00E1n text ke zpracov\u00E1n\u00ED: "{1}".

language.LanguageAbbreviationsExpand   = Rozvinut\u00ED zkratek v {0}.
language.LanguageCreated               = Vytvo\u0159ena definice jazyka {0}.
language.LanguageCreating              = Vytv\u00E1\u0159en\u00ED definice jazyka {0} s odd\u011Blova\u010Dem {1}, prohozen\u00EDm rod\u016F {2}, 1. a 2. osoby {3}, 1. a 3. , rozvinut\u00EDm zkratek {4}, opravou pravopisu {5}, nahrazen\u00EDm emotikon {6}, vnit\u0159n\u00ED interpunkce {7}.
language.LanguageEmoticonsSubstitution = Nahrazen\u00ED emotikon v {0}.
language.LanguageGenderSwap            = Prohazov\u00E1n\u00ED mu\u017Esk\u00E9ho a \u017Eensk\u00E9ho rodu v {0}.
language.LanguagePerson2Transform      = Prohozen\u00ED 1. a 3. osoby v {0}.
language.LanguagePersonTransform       = Prohozen\u00ED 1. a 2. osoby v {0}.
language.LanguagePunctuationRemoval    = Odstran\u011Bn\u00ED vnit\u0159n\u00ED interpunkce v {0}.

loader.AIMLHandlerCharacters              = Zpracov\u00E1n\u00ED znak\u016F {0}.
loader.AIMLHandlerConstruction            = Vytvo\u0159en\u00ED obslu\u017En\u00E9ho objektu ze struktury {0}, robota {1}, v\u00FDchoz\u00ED strategie {2}, z\u00E1chovn\u00E9 strategie {3}, obslu\u017En\u00E9ho objektu pro chyby p\u0159i striktn\u00EDm parsov\u00E1n\u00ED {4}.
loader.AIMLHandlerCopy                    = Vytvo\u0159en\u00ED kopie obslu\u017En\u00E9ho objektu {0}.
loader.AIMLHandlerCustomPolicyPushed      = Pro {1} v {0} s attributy {2} vlo\u017Eena vlastn\u00ED strategie pro b\u00EDl\u00E9 znaky: {3}.
loader.AIMLHandlerEndElement              = Konec elementu. Uri: {0}, M\u00EDstn\u00ED jm\u00E9no: {1}, Kvalifikovan\u00E9 jm\u00E9no: {2}.
loader.AIMLHandlerEndElementAfterState    = Po zpracov\u00E1n\u00ED konce elementu: vzor: {0},  that: {1},  topic: {2}, \u0161ablona: {3}, znaky: {4}.
loader.AIMLHandlerEndElementBeforeState   = P\u0159ed zpracov\u00E1n\u00EDm konce elementu: vzor: {0},  that: {1},  topic: {2}, \u0161ablona: {3}, znaky: {4}.
loader.AIMLHandlerForeign                 = Ignorov\u00E1n ciz\u00ED prvek {0} z prostoru jmen {1}.
loader.AIMLHandlerForeignEnd              = Ignorov\u00E1n ciz\u00ED prvek {0} z prostoru jmen {1}.
loader.AIMLHandlerForwardProcessing       = Ignorov\u00E1n nezn\u00E1m\u00FD prvek {0} z prostoru jmen {1} v r\u00E1mci dop\u0159edn\u00E9ho zpracov\u00E1n\u00ED.
loader.AIMLHandlerForwardProcessingEnd    = Ignorov\u00E1n nezn\u00E1m\u00FD prvek {0} z prostoru jmen {1} v r\u00E1mci dop\u0159edn\u00E9ho zpracov\u00E1n\u00ED.
loader.AIMLHandlerForwardSet              = Verze dokumentu "{0}" rozd\u00EDln\u00E1 od implementovan\u00E9 spustila dop\u0159edn\u00E9 zpracov\u00E1n\u00ED.
loader.AIMLHandlerIgnorableSpaces         = Na\u010Dteno {0} ignorovateln\u00FDch b\u00EDl\u00FDch znak\u016F.
loader.AIMLHandlerInState                 = Vytvo\u0159en\u00ED obslu\u017En\u00E9ho objektu z prototypu {0} ve stavu topic: {1}, that: {2}, pattern: {3}, template: {4}, chars: {5}, phase: {6}, spacingStackContent: {7}.
loader.AIMLHandlerStartElement            = Za\u010D\u00E1tek elementu. Uri: {0}, M\u00EDstn\u00ED jm\u00E9no: {1}, Kvalifikovan\u00E9 jm\u00E9no: {2}, Atributy: {3}.
loader.AIMLHandlerStartElementAfterState  = Po zpracov\u00E1n\u00ED za\u010D\u00E1tku elementu: vzor: {0},  that: {1},  topic: {2}, \u0161ablona: {3}, znaky: {4}.
loader.AIMLHandlerStartElementBeforeState = P\u0159ed zpracov\u00E1n\u00EDm za\u010D\u00E1tku elementu: vzor: {0},  that: {1},  topic: {2}, \u0161ablona: {3}, znaky: {4}.
loader.AIMLParseAttempt                   = Pokus o naparsov\u00E1n\u00ED ze zdroje {0} do {1} v kontextu {2}.
loader.AIMLParserInitialization           = Inicializace na\u010D\u00EDta\u010De parserem {0}.
loader.AIMLParserWarning                  = Varov\u00E1n\u00ED{0}
loader.AfterLoadingAttempts               = Na\u010D\u00EDt\u00E1n\u00ED soubor\u016F ve  po\u0159ad\u00ED.
loader.BeforeLoadingAttempts              = Na\u010D\u00EDt\u00E1n\u00ED soubor\u016F {0} v p\u0159ednostn\u00EDm po\u0159ad\u00ED.
loader.DefaultLoadAttempt                 = Pokus o na\u010Dten\u00ED dle nastaven\u00ED robota {0}.
loader.FileLoadAttempt                    = Pokus o na\u010Dten\u00ED souboru {0} AIML parserem.
loader.FileLoadSkipped                    = Soubor {0} p\u0159esko\u010Den p\u0159i na\u010D\u00EDt\u00E1n\u00ED: nem\u00E1 p\u0159\u00EDponu .aiml.
loader.LocationIsDir                      = Um\u00EDst\u011Bn\u00ED {0} je adres\u00E1\u0159, pokra\u010Duje se na\u010D\u00EDt\u00E1n\u00EDm soubor\u016F uvnit\u0159.
loader.LocationIsNotDir                   = Um\u00EDst\u011Bn\u00ED {0} nen\u00ED adres\u00E1\u0159, pokra\u010Duje se na\u010Dten\u00EDm um\u00EDst\u011Bn\u00ED jako souboru.
loader.SkippingExtra                      = P\u0159esko\u010Den\u00ED {0}, nebo\u0165 je nahr\u00E1v\u00E1n mimo po\u0159ad\u00ED.
loader.StandardLoadingAttempts            = Na\u010D\u00EDt\u00E1n\u00ED soubor\u016F z {0} v b\u011B\u017En\u00E9m po\u0159ad\u00ED.
loader.StreamLoadAttempt                  = Pokus o na\u010Dten\u00ED ze vstupn\u00EDho proudu se syst\u00E9mov\u00FDm ID {0}.

parser.AIMLTemplateHandleForward        = Dop\u0159edn\u00E9 zpracov\u00E1n\u00ED AIML prvku {0}.
parser.AIMLTemplateHandleNode           = Zpracov\u00E1n\u00ED uzlu {0} s v\u00FDsledkem "{1}".
parser.AIMLTemplateHandleShortened      = Zpracov\u00E1n\u00ED zkr\u00E1cen\u00E9ho prvku {0} za \u00FA\u010Delem vytvo\u0159en\u00ED {1} se synem {2}.
parser.AIMLTemplateParserCreated        = Vytvo\u0159en parser pro \u0161ablonu se zn\u011Bn\u00EDm "{2}" v konverzaci {1} s botem {0}.
parser.AIMLTemplateParserProcessElement = Zpracov\u00E1n\u00ED prvku {0} parserem.
parser.AIMLTemplateParserProcessForeign = Zpracov\u00E1n\u00ED ciz\u00EDho prvku {0} parserem.
parser.AIMLTemplateParserProcessInput   = Zpracov\u00E1n\u00ED textov\u00E9ho vstupu "{0}" parserem.

preprocessor.NormalizerFromNormal = Norm\u00E1ln\u00ED text "{0}" p\u0159eveden zp\u011Bt na "{1}".
preprocessor.NormalizerToNormal   = Text "{0}" p\u0159eveden na norm\u00E1ln\u00ED "{1}".
preprocessor.SplitterSplit        = Text "{0}" rozd\u011Blen do v\u011Bt {1} podle {2}.

processor.BotProcessorResult               = Procesor zpracoval prvek {0} a vr\u00E1til pro predik\u00E1t {1} robota {2} v\u00FDsledek {3}.
processor.GetProcessorResult               = Procesor zpracoval prvek {0} a vr\u00E1til pro predik\u00E1t {1} konverzace {2} v\u00FDsledek {3}.
processor.GossipWritten                    = Pov\u00EDd\u00E1n\u00ED "{0}" pro bota {1} v konverzaci {2] zaps\u00E1no.
processor.LearnAttempt                     = Pokus o nau\u010Den\u00ED c\u00EDle {0} procesorem pro bota {1} v konverzaci {2}.
processor.LearnFinished                    = Nau\u010Den c\u00EDl {0} procesorem pro bota {1} v konverzaci {2}.
processor.MultipleConditionProcessorResult = V\u00EDce\u010Detn\u00E1 podm\u00EDnka v prvku {0} testuj\u00EDc\u00ED hodnotu {1} vr\u00E1tila {2}.
processor.ProcessorClassRegistration       = Registrov\u00E1n\u00ED procesoru {1} pro element {0}.
processor.SingleConditionProcessorResult   = Jednoduch\u00E1 podm\u00EDnka v prvku {0} testuj\u00EDc\u00ED hodnotu "{2}" predik\u00E1tu {1} vr\u00E1tila {3}.

responder.BotCreated                            = Vytvo\u0159en robot {0}.
responder.BotCreating                           = Vytv\u00E1\u0159en\u00ED robota {0} v jazyce {1} s um\u00EDst\u011Bn\u00EDm soubor\u016F {2}, souborem pro promluvy {3}, predik\u00E1ty {4}, p\u0159ednostn\u011B na\u010Dten\u00FDmi soubory {5}, dodate\u010Dn\u011B na\u010Dten\u00FDmi soubory {6}.
responder.BotPredicateResult                    = Bot {0} vrac\u00ED pro predik\u00E1t {1} hodnotu {2}.
responder.ConversationBotOutput                 = Z\u00EDsk\u00E1v\u00E1n\u00ED u\u017Eivatelsk\u00E9ho vstupu konverzace {0} na indexu {2} ve vstupech {1}.
responder.ConversationCreated                   = Konverzace vytvo\u0159ena.
responder.ConversationCreating                  = Vytv\u00E1\u0159en\u00ED konverzace s na\u010D\u00EDta\u010Dem {0}, rozd\u011Blova\u010Dem v\u011Bt {1} , normaliz\u00E9rem vstupu {2} , v jazyce {3}, tov\u00E1rnou na parsery \u0161ablony {4}, v\u00FDchoz\u00EDmi predik\u00E1ty {5}, nastaven\u00EDmi zobrazen\u00ED v\u00FDstupu pri nastaven\u00ED preidk\u00E1t\u016F {6}, exekutorem vl\u00E1ken {7}.
responder.ConversationEvaluationThreadException = V\u00FDjimka {0} v pracovn\u00EDm vl\u00E1kn\u011B {1} konverzace {2} se vstupem {3}, kter\u00E9 naslouch\u00E1 {4}.
responder.ConversationLearn                     = U\u010Den\u00ED v konverzaci {0} na cest\u011B {1}.
responder.ConversationListen                    = Odposlech v konverzaci {0} s v\u00FDsledkem {1}.
responder.ConversationPredicateResult           = V konverzaci {0} vrac\u00ED predik\u00E1t {1} hodnotu {2}.
responder.ConversationPredicateSet              = V konverzaci {0} nastaven predik\u00E1t {1} na hodnotu {2}.
responder.ConversationTalk                      = Promluva "{1}" u\u017Eivatele v konverzaci {0}
responder.ConversationTalkWithListener          = Promluva "{1}" u\u017Eivatele v konverzaci {0} s v\u00FDsledkem "{2}".
responder.ConversationTryTalk                   = Promluva "{1}" u\u017Eivatele v konverzaci {0} s poslucha\u010Dem {2}.
responder.ConversationUserInput                 = Z\u00EDsk\u00E1v\u00E1n\u00ED botova v\u00FDstupu konverzace {0} na indexu {2} ve vstupech {1}.

storage.AIMLInputPathCreated       = Vytvo\u0159ena vstupn\u00ED cesta ze slov {0}.
storage.FindingMatchForPath        = Hled\u00E1n\u00ED \u0161ablony pro cestu {0}.
storage.InsertingPathAndTemplate   = Vkl\u00E1d\u00E1n\u00ED cesty {0} a \u0161ablony {1}.
storage.NodeChildAdd               = Do uzlu {0} p\u0159id\u00E1n nov\u00FD uzel {1} jako syn.
storage.NodeCreation               = Vytv\u00E1\u0159en\u00ED uzlu v hloubce {0} s ko\u0159enov\u00FDm slovem {1} v \u010D\u00E1sti {2} s tov\u00E1rnou na v\u011Btven\u00ED {3}.
storage.NodeInsertingPath          = Vkl\u00E1d\u00E1n\u00ED cesty {1} v \u010D\u00E1sti {3} a \u0161ablony {2} do uzlu {0}.
storage.NodeMatching               = Prohled\u00E1v\u00E1n\u00ED v uzlu {0} s cestou {1} v \u010D\u00E1sti {2}.
storage.NodeTemplateFound          = Nalezena \u0161ablona v uzlu {0} s cestou {1} v \u010D\u00E1sti {2}.
storage.NodeTemplateNotFound       = V uzlu {0} s cestou {1} v \u010D\u00E1sti {2} byly vy\u010Derp\u00E1ny v\u0161echny mo\u017Enosti hled\u00E1n\u00ED.
storage.NodeTemplateSetting        = Nastaven\u00ED \u0161ablony {2} na konci cesty {1} v \u010D\u00E1sti {3} do uzlu {0}.
storage.NodeTriesRunOut            = V uzlu {0} s cestou {1} v \u010D\u00E1sti {2} nenalezena \u0161ablona.
storage.StarMatchedPartAdd         = Ve v\u00FDsledku {0} se p\u0159id\u00E1v\u00E1 zachycen\u00E1 \u010D\u00E1st {1} pro \u010D\u00E1st vstupu {2}.
storage.StarMatchedPartsResult     = V\u00FDsledek {0} vrac\u00ED zachycen\u00E9 \u010D\u00E1sti {1} pro \u010D\u00E1st vstupu {2}.
storage.SuccesfulResultCreating    = Vytv\u00E1\u0159en\u00ED \u00FAsp\u011B\u0161n\u00E9ho v\u00FDsledku ze \u0161ablony {0}.
storage.TemplateCreating           = Vytv\u00E1\u0159en\u00ED \u0161ablony s textem {0}.
storage.TemplateOverwrite          = Nov\u00E1 \u0161ablona "{0}" p\u0159episuje p\u016Fvodn\u00ED \u0161ablonu {1}" v uzlu {2}.
storage.map.MapperCreationFinished = Vytvo\u0159en nov\u00FD mapper {0}.
storage.map.MapperCreationStart    = Pokus o vytvo\u0159en\u00ED mapperu v hloubce {0}, pro otcovsk\u00E9 slovo {1} v \u010D\u00E1sti {2}.
storage.map.MapperResizeAttempt    = Pokus \u010D. {2} o zm\u011Bnu velikosti mapperu p\u0159i vlo\u017Een\u00ED hodnoty {1} s kl\u00ED\u010Dem {0}.

utils.MatcherResult        = Porovn\u00E1n\u00ED textu "{1}" oproti vzoru "{1}" dalo v\u00FDsledek {2}.
utils.PropertyPathLoad     = Na\u010D\u00EDt\u00E1n\u00ED Properties z cesty {0}.
utils.PropertyResourceLoad = Pokud o na\u010Dten\u00ED Properties ze zdroje pomoc\u00ED vstupn\u00EDho proudu.
utils.PropertyStreamLoad   = Na\u010D\u00EDt\u00E1n\u00ED Properties ze vstupn\u00EDho proudu.
utils.TextReplaceStart     = Nahrazov\u00E1n\u00ED vstupu "{0}" pomoc\u00ED {1}.
utils.TextReplaced         = Vstup "{0}" nahrazen "{1}".
